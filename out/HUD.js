// Generated by CoffeeScript 1.6.3
(function() {
  var HUD,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.SpaceDom || (window.SpaceDom = {});

  window.SpaceDom.HUD = HUD = (function(_super) {
    __extends(HUD, _super);

    function HUD(game) {
      this.game = game;
      this.initialize();
      this.texts = [];
    }

    HUD.prototype.update = function() {
      var i, obj, text, _i, _j, _k, _len, _len1, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _results;
      _ref = this.game.gameObjects;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        obj = _ref[_i];
        if (!(obj.hud && !this.hasText(obj))) {
          continue;
        }
        text = new createjs.Text('', 'normal 14px sans-serif', '#0F0');
        text.textAlign = 'center';
        text.gameobj = obj;
        this.texts.push(text);
        this.addChild(text);
      }
      _ref1 = this.texts;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        text = _ref1[_j];
        text.text = "HP: " + ((_ref2 = text.gameobj.status) != null ? _ref2.curhp : void 0) + "/" + ((_ref3 = text.gameobj.status) != null ? _ref3.maxhp : void 0);
        text.x = text.gameobj.x;
        text.y = text.gameobj.y + text.gameobj.height * 0.5;
      }
      _results = [];
      for (i = _k = 0, _ref4 = this.texts.length; 0 <= _ref4 ? _k < _ref4 : _k > _ref4; i = 0 <= _ref4 ? ++_k : --_k) {
        if (!((_ref5 = this.texts[i]) != null ? _ref5.gameobj.isRemove : void 0)) {
          continue;
        }
        this.removeChild(this.texts[i]);
        _results.push(this.texts.splice(i, 1));
      }
      return _results;
    };

    HUD.prototype.hasText = function(obj) {
      var text, _i, _len, _ref;
      _ref = this.texts;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        text = _ref[_i];
        if (text.gameobj === obj) {
          return true;
        }
      }
      return false;
    };

    return HUD;

  })(createjs.Container);

}).call(this);

/*
//@ sourceMappingURL=HUD.map
*/
